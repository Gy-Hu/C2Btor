;; -*- kratos2 -*-
;; generated by c2kratos.py on Sat, 12 Apr 2025 10:24:13

(globals)

(entry |`init.and.main|)

(function divide ((var dividend (ubv 32)) (var divisor (ubv 32)))
(return
  (var quotient (ubv 32))
  (var remainder (ubv 32)))
(locals)
(seq
  (seq
    (seq
      (condjump (eq divisor (cast (ubv 32) (const 0 (sbv 32)))) (label |$ite.then#1|))
      (label |$ite.else#1|)
      (assume true)
      (jump (label |$ite.end#1|))
      (label |$ite.then#1|)
      (seq
        (seq
          (assume true)
          (assign quotient (cast (ubv 32) (const 0 (sbv 32))))
          (assign remainder (cast (ubv 32) (const 0 (sbv 32))))
          (jump (label |divide.return.lbl|)))
        (assume true))
      (label |$ite.end#1|))
    (seq
      (condjump (eq dividend (cast (ubv 32) (const 0 (sbv 32)))) (label |$ite.then#2|))
      (label |$ite.else#2|)
      (assume true)
      (jump (label |$ite.end#2|))
      (label |$ite.then#2|)
      (seq
        (seq
          (assign quotient (cast (ubv 32) (const 0 (sbv 32))))
          (assign remainder (cast (ubv 32) (const 0 (sbv 32))))
          (jump (label |divide.return.lbl|)))
        (assume true))
      (label |$ite.end#2|))
    (assign quotient (div dividend divisor))
    (assign remainder (rem dividend divisor)))
  (label |divide.return.lbl|))
)


(function main ()
(return
  (var |main.return| (sbv 32)))
(locals
  (var dividend (ubv 32))
  (var divisor (ubv 32))
  (var quotient (ubv 32))
  (var remainder (ubv 32))
  (var |$aux| (ubv 32))
  (var |$aux.1| (ubv 32)))
(seq
  (seq
    (assign quotient (cast (ubv 32) (const 0 (sbv 32))))
    (assign remainder (cast (ubv 32) (const 0 (sbv 32))))
    (seq
      (call divide dividend divisor |$aux| |$aux.1|)
      (assign quotient |$aux|)
      (assign remainder |$aux.1|))
    (assume true)
    (assume true)
    (seq
      (condjump (not (or (eq quotient (cast (ubv 32) (const 1 (sbv 32)))) (eq remainder (cast (ubv 32) (const 1 (sbv 32)))))) (label |$ite.then#1|))
      (label |$ite.else#1|)
      (assume true)
      (jump (label |$ite.end#1|))
      (label |$ite.then#1|)
      (seq
        (call (const |__VERIFIER_error| (fun () ())))
        (assume true))
      (label |$ite.end#1|))
    (seq
      (assign |main.return| (const 0 (sbv 32)))
      (jump (label |main.return.lbl|))))
  (label |main.return.lbl|))
)


(function |__VERIFIER_error| ()
(return)
(locals)
(! (label |ERROR{__VERIFIER_error}|) :error |__VERIFIER_error|)
)


(function |`init.and.main| ()
(return)
(locals
  (var |ret.0| (sbv 32)))
(call main |ret.0|)
)

