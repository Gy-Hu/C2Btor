;; -*- kratos2 -*-
;; generated by c2kratos.py on Thu, 24 Apr 2025 14:28:18

(globals
(var |__| bool)
(var |___0| (ubv 8))
(var |___1| (ubv 8))
(var state bool)
(var |state_0| (ubv 8)))

(entry |`init.and.main|)

(function |reach_error| ()
(return)
(locals)
(seq
  (call (const |__VERIFIER_error| (fun () ())))
  (label |reach_error.return.lbl|))
)


(function |rule_0| ()
(return)
(locals
  (var |$temp.1| (sbv 8))
  (var |__chosen| (ubv 8))
  (var chosen (ubv 8))
  (var |$tmp| (sbv 8))
  (var |$tmp.1| (sbv 8)))
(seq
  (seq
    (seq
      (call (const |__VERIFIER_nondet_char| (fun () ((sbv 8)))) |$temp.1|)
      (assign |$tmp| |$temp.1|)
      (assign chosen (cast (ubv 8) |$tmp|)))
    (seq
      (call (const |__VERIFIER_nondet_char| (fun () ((sbv 8)))) |$temp.1|)
      (assign |$tmp.1| |$temp.1|)
      (assign |__chosen| (cast (ubv 8) |$tmp.1|)))
    (seq
      (condjump (eq (cast (ubv 32) (cast (sbv 32) |__chosen|)) (const 0 (ubv 32))) (label |$ite.then#1|))
      (label |$ite.else#1|)
      (seq
        (assume false)
        (assume true))
      (jump (label |$ite.end#1|))
      (label |$ite.then#1|)
      (seq
        (seq
          (assign |state_0| |__chosen|)
          (assign state (cast bool (const 1 (sbv 32)))))
        (assume true))
      (label |$ite.end#1|)))
  (label |rule_0.return.lbl|))
)


(function |rule_1| ()
(return)
(locals
  (var |$temp.1| (sbv 8))
  (var |__chosen| (ubv 8))
  (var chosen (ubv 8))
  (var |$tmp| (sbv 8))
  (var |$tmp.1| (sbv 8)))
(seq
  (seq
    (seq
      (call (const |__VERIFIER_nondet_char| (fun () ((sbv 8)))) |$temp.1|)
      (assign |$tmp| |$temp.1|)
      (assign chosen (cast (ubv 8) |$tmp|)))
    (seq
      (call (const |__VERIFIER_nondet_char| (fun () ((sbv 8)))) |$temp.1|)
      (assign |$tmp.1| |$temp.1|)
      (assign |__chosen| (cast (ubv 8) |$tmp.1|)))
    (seq
      (condjump (and (and state (eq (cast (sbv 32) |state_0|) (cast (sbv 32) |__chosen|))) (or (eq (cast (sbv 32) |__chosen|) (cast (sbv 32) chosen)) (eq (cast (ubv 32) (cast (sbv 32) chosen)) (const 1 (ubv 32))))) (label |$ite.then#1|))
      (label |$ite.else#1|)
      (seq
        (assume false)
        (assume true))
      (jump (label |$ite.end#1|))
      (label |$ite.then#1|)
      (seq
        (seq
          (assign |state_0| chosen)
          (assign state (cast bool (const 1 (sbv 32)))))
        (assume true))
      (label |$ite.end#1|)))
  (label |rule_1.return.lbl|))
)


(function |rule_2| ()
(return)
(locals
  (var |$temp.1| (sbv 8))
  (var |__chosen| (ubv 8))
  (var chosen (ubv 8))
  (var |$tmp| (sbv 8))
  (var |$tmp.1| (sbv 8)))
(seq
  (seq
    (seq
      (call (const |__VERIFIER_nondet_char| (fun () ((sbv 8)))) |$temp.1|)
      (assign |$tmp| |$temp.1|)
      (assign chosen (cast (ubv 8) |$tmp|)))
    (seq
      (call (const |__VERIFIER_nondet_char| (fun () ((sbv 8)))) |$temp.1|)
      (assign |$tmp.1| |$temp.1|)
      (assign |__chosen| (cast (ubv 8) |$tmp.1|)))
    (seq
      (condjump (and state (eq (cast (sbv 32) |state_0|) (cast (sbv 32) |__chosen|))) (label |$ite.then#1|))
      (label |$ite.else#1|)
      (seq
        (assume false)
        (assume true))
      (jump (label |$ite.end#1|))
      (label |$ite.then#1|)
      (seq
        (seq
          (assign |___0| |__chosen|)
          (assign |___1| (cast (ubv 8) (const 0 (ubv 32))))
          (assign |__| (cast bool (const 1 (sbv 32))))
          (seq
            (condjump (not (eq (cast (ubv 32) |__chosen|) (const 0 (ubv 32)))) (label |$ite.then#2|))
            (label |$ite.else#2|)
            (assume true)
            (jump (label |$ite.end#2|))
            (label |$ite.then#2|)
            (seq
              (call |reach_error|)
              (assume true))
            (label |$ite.end#2|)))
        (assume true))
      (label |$ite.end#1|)))
  (label |rule_2.return.lbl|))
)


(function main ()
(return
  (var |main.return| (sbv 32)))
(locals
  (var |$temp.1| (sbv 32))
  (var |$tmp| (sbv 32)))
(seq
  (seq
    (label |loop#1|)
    (condjump (cast bool (const 1 (sbv 32))) (label |loop.entry#1|))
    (jump (label |loop.exit#1|))
    (label |loop.entry#1|)
    (seq
      (seq
        (call (const |__VERIFIER_nondet_int| (fun () ((sbv 32)))) |$temp.1|)
        (assign |$tmp| |$temp.1|)
        (assign |$temp.1| |$tmp|))
      (condjump (not (eq |$temp.1| (const 0 (sbv 32)))) (label |case.cond#2.0|))
      (label |case#2.0|)
      (call |rule_0|)
      (jump (label |loop.end#2|))
      (jump (label |case#2.1|))
      (label |case.cond#2.0|)
      (condjump (not (eq |$temp.1| (const 1 (sbv 32)))) (label |case.cond#2.1|))
      (label |case#2.1|)
      (call |rule_1|)
      (jump (label |loop.end#2|))
      (jump (label |case#2.2|))
      (label |case.cond#2.1|)
      (condjump (not (eq |$temp.1| (const 2 (sbv 32)))) (label |case.cond#2.2|))
      (label |case#2.2|)
      (call |rule_2|)
      (jump (label |loop.end#2|))
      (jump (label |case#2.3|))
      (label |case.cond#2.2|)
      (label |case#2.3|)
      (assume false)
      (jump (label |loop.end#2|))
      (assume true)
      (label |loop.end#2|))
    (jump (label |loop#1|))
    (label |loop.exit#1|)
    (label |loop.end#1|))
  (label |main.return.lbl|))
)


(function |__VERIFIER_nondet_char| ()
(return
  (var |__VERIFIER_nondet_char.return| (sbv 8)))
(locals)
(havoc |__VERIFIER_nondet_char.return|)
)


(function |__VERIFIER_nondet_int| ()
(return
  (var |__VERIFIER_nondet_int.return| (sbv 32)))
(locals)
(havoc |__VERIFIER_nondet_int.return|)
)


(function |__VERIFIER_error| ()
(return)
(locals)
(! (label |ERROR{__VERIFIER_error}|) :error |__VERIFIER_error|)
)


(function |`init.and.main| ()
(return)
(locals
  (var |ret.0| (sbv 32)))
(seq
  (assign |state_0| (const 0 (ubv 8)))
  (assign state false)
  (assign |___0| (const 0 (ubv 8)))
  (assign |___1| (const 0 (ubv 8)))
  (assign |__| false)
  (call main |ret.0|))
)

